{"version":3,"file":"static/js/359.97e32520.chunk.js","mappings":"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","sources":["components/StopWatch/ui/Button/Button.jsx","components/StopWatch/ui/ShowTimer/ShowTimer.jsx","components/StopWatch/ui/CheckSpeed/CheckSpeed.jsx","components/StopWatch/ui/DoubleClick/DoubleClick.jsx","components/StopWatch/ui/ControlPanel/ControlPanel.jsx","components/StopWatch/StopWatch.jsx"],"sourcesContent":["import { memo, useRef } from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ id, styles, label, callback }) => {\r\n  const render = useRef({\r\n    btn__1: 0,\r\n    btn__2: 0,\r\n    btn__3: 0,\r\n    btn__4: 0,\r\n    btn__5: 0,\r\n    btn__6: 0,\r\n  });\r\n  console.log(\r\n    `Button_${id}  render: ${++render.current[\r\n      `btn__${id}`\r\n    ]} `\r\n  );\r\n\r\n  return (\r\n    <button\r\n      id={`btn__${id}`}\r\n      type='button'\r\n      className={`button button__${styles} shadow`}\r\n      onClick={callback}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\nexport default memo(Button);\r\n","import \"./ShowTimer.css\";\r\n\r\nconst ShowTimer = ({ time }) => {\r\n  return (\r\n    <h1 className={\"timer shadow\"}>\r\n      <span>\r\n        {(\"0\" + Math.floor((time / 360000) % 24)).slice(-2)}\r\n        :\r\n      </span>\r\n      <span>\r\n        {(\"0\" + Math.floor((time / 6000) % 60)).slice(-2)}:\r\n      </span>\r\n      <span>\r\n        {(\"0\" + Math.floor((time / 100) % 60)).slice(-2)}:\r\n      </span>\r\n      <span>{(\"0\" + Math.floor(time)).slice(-2)}</span>\r\n    </h1>\r\n  );\r\n};\r\nexport default ShowTimer;\r\n","import \"./CheckSpeed.css\";\r\nimport { Button } from \"..\";\r\n\r\nconst CheckSpeed = ({ callback }) => {\r\n  return (\r\n    <>\r\n      <p className='check__header shadow_text'>\r\n        Check your speed 2clicks\r\n      </p>\r\n      <Button\r\n        id={5}\r\n        styles={\"check\"}\r\n        label={\"Check speed\"}\r\n        callback={callback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default CheckSpeed;\r\n","import { useState, useRef, useCallback } from \"react\";\r\nimport { Button } from \"..\";\r\nimport \"./DoubleClick.css\";\r\n\r\nconst DoubleClick = () => {\r\n  const [indicatorOn, setIndicatorOn] = useState(false);\r\n  const intervalIdRef = useRef();\r\n  const timeoutIdRef = useRef();\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (intervalIdRef.current) {\r\n      setIndicatorOn(\"indicator_on\");\r\n    } else {\r\n      setIndicatorOn(\"indicator_off\");\r\n      intervalIdRef.current = setInterval(() => {}, 1);\r\n\r\n      timeoutIdRef.current = setTimeout(() => {\r\n        clearInterval(intervalIdRef.current);\r\n        intervalIdRef.current = 0;\r\n        clearTimeout(timeoutIdRef.current);\r\n      }, 300);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='DoubleClick shadow'>\r\n      <div\r\n        className={`indicator ${indicatorOn} shadow`}\r\n      ></div>\r\n      <Button\r\n        id={6}\r\n        styles={\"doubleClick\"}\r\n        label={\"Double click < 300ms\"}\r\n        callback={handleClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default DoubleClick;\r\n","import { memo } from \"react\";\r\nimport { Button } from \"..\";\r\n\r\nconst ControlPanel = ({\r\n  wait,\r\n  setWait,\r\n  setTime,\r\n  timerOn,\r\n  setTimerOn,\r\n}) => {\r\n  return (\r\n    <div className={\"ControlPanel\"}>\r\n      <Button\r\n        id={1}\r\n        styles={wait ? \"wait_on\" : \"wait_off\"}\r\n        label={\"Wait\"}\r\n        callback={() => setWait((prev) => !prev)}\r\n      />\r\n\r\n      <Button\r\n        id={2}\r\n        styles={\"reset\"}\r\n        label={\"Reset\"}\r\n        callback={() => {\r\n          setWait(false);\r\n          setTime(0);\r\n        }}\r\n      />\r\n      {!timerOn ? (\r\n        <Button\r\n          id={3}\r\n          styles={\"start\"}\r\n          label={\"START\"}\r\n          callback={() => {\r\n            setWait(false);\r\n            setTimerOn(true);\r\n          }}\r\n        />\r\n      ) : (\r\n        <Button\r\n          id={4}\r\n          styles={\"stop\"}\r\n          label={\"STOP\"}\r\n          callback={() => {\r\n            setWait(false);\r\n            setTimerOn(false);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default memo(ControlPanel);\r\n","import {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  ControlPanel,\r\n  ShowTimer,\r\n  CheckSpeed,\r\n  DoubleClick,\r\n} from \"./ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./StopWatch.css\";\r\n\r\nexport function StopWatch() {\r\n  const [timerOn, setTimerOn] = useState(false);\r\n  const [wait, setWait] = useState(false);\r\n  const [time, setTime] = useState(0);\r\n  const timerIdRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect fire\", Date.now());\r\n    if (timerOn) {\r\n      timerIdRef.current = setTimeout(function run() {\r\n        if (!wait) {\r\n          setTime((prev) => prev + 1);\r\n          timerIdRef.current = setTimeout(run, 10);\r\n        }\r\n      }, 10);\r\n    } else {\r\n      clearTimeout(timerIdRef.current);\r\n      setTime(0);\r\n    }\r\n    return () => clearTimeout(timerIdRef.current);\r\n  }, [timerOn, wait]);\r\n\r\n  const checkSpeed = useCallback(() => {\r\n    // console.log(\" checkSpeed  fire\", Date.now());\r\n    if (timerOn) {\r\n      setWait(true);\r\n    } else {\r\n      setWait(false);\r\n      setTimerOn(true);\r\n    }\r\n  }, [timerOn]);\r\n\r\n  return (\r\n    <>\r\n      <Link to='/portfolio'>{\"BACK\"}</Link>\r\n      <div className='screen'>\r\n        <header className={\"allTimer shadow\"}>\r\n          <ShowTimer time={time} />\r\n          <ControlPanel\r\n            wait={wait}\r\n            setWait={setWait}\r\n            setTime={setTime}\r\n            timerOn={timerOn}\r\n            setTimerOn={setTimerOn}\r\n          />\r\n          <CheckSpeed callback={checkSpeed} />\r\n          <DoubleClick />\r\n        </header>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Button","id","styles","label","callback","render","useRef","btn__1","btn__2","btn__3","btn__4","btn__5","btn__6","console","log","current","type","className","onClick","memo","time","Math","floor","slice","useState","indicatorOn","setIndicatorOn","intervalIdRef","timeoutIdRef","handleClick","useCallback","setInterval","setTimeout","clearInterval","clearTimeout","ControlPanel","wait","setWait","setTime","timerOn","setTimerOn","prev","StopWatch","timerIdRef","useEffect","run","checkSpeed","to"],"sourceRoot":""}