{"version":3,"file":"static/js/536.58e65bae.chunk.js","mappings":"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","sources":["components/SimpleCalc/ui/Input/Input.tsx","components/SimpleCalc/ui/Results/Results.tsx","components/SimpleCalc/constants.ts","components/SimpleCalc/ui/Select/Select.tsx","components/SimpleCalc/ui/Warning/Warning.tsx","components/SimpleCalc/components/SimpleCalc.tsx"],"sourcesContent":["import \"./Input.scss\";\r\n\r\ninterface InputProps {\r\n  labelText: string;\r\n  id: string;\r\n  state: number;\r\n  setState: React.Dispatch<React.SetStateAction<number>>;\r\n  styles: string;\r\n}\r\nconst Input = ({\r\n  labelText,\r\n  id,\r\n  state,\r\n  setState,\r\n  styles,\r\n}: InputProps) => {\r\n  return (\r\n    <div className={styles}>\r\n      <label htmlFor={id}>{labelText}</label>\r\n      <input\r\n        className='input'\r\n        step={\"any\"}\r\n        id={id}\r\n        type={\"number\"}\r\n        value={state}\r\n        onChange={(e) => {\r\n          setState(Number(e.currentTarget.value));\r\n        }}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n","interface ResultsProps {\r\n  result: number | null;\r\n  styles: string;\r\n}\r\nconst Results = ({ result, styles }: ResultsProps) => {\r\n  return (\r\n    <div className={styles}>\r\n      <h3>Rounded result: </h3>\r\n      <h2>{result}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Results;\r\n","export const OPERATORS = [\"+\", \"-\", \"*\", \"/\"];\r\n","import { OPERATORS } from \"../../constants\";\r\ninterface SelectProps {\r\n  id: string;\r\n  state: string;\r\n  setState: React.Dispatch<React.SetStateAction<string>>;\r\n  styles: string;\r\n}\r\n\r\nconst Select = ({\r\n  id,\r\n  state,\r\n  setState,\r\n  styles,\r\n}: SelectProps) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>\r\n        \"Please, select the operation:\"\r\n      </label>\r\n      <select\r\n        className={styles}\r\n        id={id}\r\n        value={state}\r\n        onChange={(e) => setState(e.currentTarget.value)}\r\n      >\r\n        <option disabled={true} value='0'>\r\n          Math operators\r\n        </option>\r\n        {OPERATORS.map((operator) => (\r\n          <option key={operator} value={operator}>\r\n            {operator}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default Select;\r\n","const Warning = ({ styles, message }: { styles:string; message: string }) => {\r\n  return (\r\n    <div className={styles}>\r\n      <h2>{message}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Warning;\r\n","import React, { useState } from \"react\";\r\nimport { Input, Select, Results, Warning } from \"../ui\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./SimpleCalc.scss\";\r\n\r\nexport const SimpleCalc = () => {\r\n  const [input_1, setInput_1] = useState(0);\r\n  const [input_2, setInput_2] = useState(0);\r\n  const [selectedOperator, setSelectedOperator] =\r\n    useState(\"0\");\r\n  const [result, setResult] = useState<number | null>(null);\r\n  const [warning, setWarning] = useState(\"\");\r\n\r\n  console.log(\r\n    \"Check states\",\r\n    selectedOperator,\r\n    input_1,\r\n    input_2,\r\n    result,\r\n    warning\r\n  );\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    calculate();\r\n  };\r\n\r\n  const calculate = () => {\r\n    setWarning(\"\");\r\n    switch (selectedOperator) {\r\n      case \"0\":\r\n        setWarning(\"You forgot select the operation\");\r\n        break;\r\n      case \"+\":\r\n        setResult(Math.round(input_1 + input_2));\r\n        break;\r\n      case \"-\":\r\n        setResult(Math.round(input_1 - input_2));\r\n        break;\r\n      case \"*\":\r\n        setResult(Math.round(input_1 * input_2));\r\n        break;\r\n      case \"/\":\r\n        if (input_2 !== 0) {\r\n          setResult(Math.round(input_1 / input_2));\r\n        } else {\r\n          setWarning(\"Cannot be divided by zero.\");\r\n        }\r\n        break;\r\n      default:\r\n        setWarning(\"Error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/portfolio'>{\"<-- BACK\"}</Link>\r\n\r\n      <div className='simpleCalc'>\r\n        <div\r\n          className='simpleCalc__monitor'\r\n          style={\r\n            warning || result\r\n              ? { visibility: \"visible\" }\r\n              : { visibility: \"hidden\" }\r\n          }\r\n        >\r\n          {warning ? (\r\n            <Warning message={warning} styles={\"warning\"} />\r\n          ) : result !== null ? (\r\n            <Results result={result} styles={\"results\"} />\r\n          ) : null}\r\n        </div>\r\n        <Select\r\n          id={\"select_1\"}\r\n          state={selectedOperator}\r\n          setState={setSelectedOperator}\r\n          styles={\"simpleCalc__selectors\"}\r\n        />\r\n\r\n        <form\r\n          className={\"simpleCalc__form\"}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <Input\r\n            labelText={\"Input first number\"}\r\n            id={\"input_1\"}\r\n            state={input_1}\r\n            setState={setInput_1}\r\n            styles={\"simpleCalc__input\"}\r\n          />\r\n          <Input\r\n            labelText={\"Input second number\"}\r\n            id={\"input_2\"}\r\n            state={input_2}\r\n            setState={setInput_2}\r\n            styles={\"simpleCalc__input\"}\r\n          />\r\n          <input\r\n            type={\"submit\"}\r\n            value={\"Calculate\"}\r\n            className={\"simpleCalc__calculate\"}\r\n          />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"names":["labelText","id","state","setState","styles","className","htmlFor","step","type","value","onChange","e","Number","currentTarget","result","OPERATORS","disabled","map","operator","message","SimpleCalc","useState","input_1","setInput_1","input_2","setInput_2","selectedOperator","setSelectedOperator","setResult","warning","setWarning","console","log","calculate","Math","round","to","style","visibility","onSubmit","preventDefault"],"sourceRoot":""}