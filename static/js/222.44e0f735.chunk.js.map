{"version":3,"file":"static/js/222.44e0f735.chunk.js","mappings":"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","sources":["components/Covid/utils/constants.js","components/Covid/api/getFetch.js","components/Covid/components/UI/Select/Select.jsx","components/Covid/components/CountriesList/components/CountriesSelection.jsx","components/Covid/components/UI/Button/Button.jsx","components/Covid/components/UI/Card/Card.jsx","components/Covid/components/UI/Error/Error.jsx","components/Covid/components/UI/Input/Input.jsx","components/Covid/components/UI/Loader/Loader.jsx","components/Covid/components/CountriesList/CountriesList.jsx","components/Covid/components/CountryInfo/CountryInfo.jsx","components/Covid/components/Statistics/Statistics.jsx","components/Covid/components/InputMenu/InputMenu.jsx","components/Covid/utils/handleDate.js","components/Covid/components/Covid.jsx","ui/Back/Back.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const BASE_API_URL = \"https://api.covid19api.com/\";\r\n\r\nexport const INIT_PERIOD = {\r\n  start_period: 0,\r\n  end_period: 0,\r\n};\r\nexport const DAY = {\r\n  start_period: 1,\r\n  end_period: 2,\r\n};\r\nexport const WEEK = {\r\n  start_period: 1,\r\n  end_period: 8,\r\n};\r\nexport const MONTH = {\r\n  start_period: 1,\r\n  end_period: 31,\r\n};\r\n\r\nexport const INIT_RESULTS = {\r\n  warning_start: \"\",\r\n  warning_end: \"\",\r\n  period_start: 0,\r\n  period_end: 0,\r\n};\r\n","import { BASE_API_URL } from \"../utils/constants\";\r\n\r\nconst getFetch = async (url) => {\r\n  if (!url) throw new Error(\"Please add url to request\");\r\n  const response = await fetch(BASE_API_URL + url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Response status fetch is : ${response.status}`);\r\n  } else {\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n};\r\n\r\nexport default getFetch;\r\n","const Select = ({ children, handleOnChange }) => {\r\n  return (\r\n    <select\r\n      name='countries'\r\n      id='countriesList'\r\n      autoFocus\r\n      defaultValue='default'\r\n      aria-label='Default select example'\r\n      onChange={(e) => handleOnChange(e.target.value)}\r\n    >\r\n      <option value='default' disabled hidden>\r\n        Choose a country:\r\n      </option>\r\n      {children}\r\n    </select>\r\n  );\r\n};\r\nexport default Select;\r\n","import Select from \"../../UI/Select/Select\";\r\n\r\nconst CountriesSelection = ({ data, setCountry }) => {\r\n  return (\r\n    <>\r\n      <Select handleOnChange={setCountry}>\r\n        {data.map((item, index) => {\r\n          let country = item.Country;\r\n          if (country.length > 30) {\r\n            country = country.slice(0, 30) + \"...\";\r\n          }\r\n          return (\r\n            <option key={item.Slug} value={item.Slug}>\r\n              {index + 1}. {country}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountriesSelection;\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ callback, label }) => {\r\n  return (\r\n    <button\r\n      className='button'\r\n      onClick={() => {\r\n        if (!callback) return;\r\n        callback();\r\n      }}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const Card = ({\r\n  name,\r\n  date,\r\n  maxPeriod,\r\n  period,\r\n  active,\r\n  confirmed,\r\n  deaths,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Country: {name}</h2>\r\n      {!!date && <p>Last statistics day: {date}</p>}\r\n      {!!maxPeriod && (\r\n        <p>All statistical period : {maxPeriod}</p>\r\n      )}\r\n      {!!period && <p>Statistical period : {period}</p>}\r\n      <p>Amount of active : {active}</p>\r\n      <p>Amount confirmed : {confirmed}</p>\r\n      <p>Amount of deaths : {deaths}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Error.scss\";\r\n\r\nconst Error = ({ label }) => {\r\n  return <h2 className={\"warning\"}>{label}</h2>;\r\n};\r\n\r\nexport default Error;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Input = ({ label, memoCallback }) => {\r\n  const [val, setVal] = useState(\"\");\r\n  console.log(\"val in Input ->\", val);\r\n\r\n  useEffect(() => {\r\n    memoCallback(val, label);\r\n  }, [memoCallback, val, label]);\r\n  return (\r\n    <input\r\n      id={label}\r\n      value={val}\r\n      type='date'\r\n      onChange={(e) => {\r\n        setVal(e.currentTarget.value);\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default Input;\r\n","const Loader = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\" style={{ width: '100%', marginTop: '50px' }}>\r\n      <div className=\"spinner-border\" role=\"status\"></div>\r\n      <span >Loading...</span>\r\n    </div>\r\n  )\r\n}\r\nexport default Loader;","import { useState, useEffect } from \"react\";\r\n\r\nimport getFetch from \"../../api/getFetch\";\r\nimport CountriesSelection from \"./components/CountriesSelection\";\r\nimport { Loader } from \"../UI\";\r\n\r\nconst CountriesList = ({ setCountry }) => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const countries = await getFetch(\"countries\");\r\n      setItems(countries);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!items.length ? (\r\n        <Loader />\r\n      ) : (\r\n        <form id='form' className='covid__countriesList'>\r\n          <label form='countriesList'></label>\r\n          <CountriesSelection\r\n            data={items}\r\n            setCountry={setCountry}\r\n          />\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountriesList;\r\n","import { useEffect, useState } from \"react\";\r\nimport getFetch from \"../../api/getFetch\";\r\nimport { Button, Card, Loader, Error } from \"../UI\";\r\nimport { DAY, WEEK, MONTH } from \"../../utils/constants\";\r\n\r\nconst CountryInfo = ({\r\n  country,\r\n  countryData,\r\n  setCountryData,\r\n  setPeriod,\r\n  setShowInputMenu,\r\n  setShowStatistics,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const request = await getFetch(`country/${country}`);\r\n      setCountryData(request);\r\n      setLoading(false);\r\n    };\r\n    if (!country.length) return;\r\n    setLoading(true);\r\n    fetchData();\r\n  }, [country, setCountryData, setLoading]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  if (!countryData.length)\r\n    return (\r\n      <Error\r\n        label={\"No information about covid in this country\"}\r\n      />\r\n    );\r\n  const lastData = countryData[countryData.length - 1];\r\n  const name = lastData.Country;\r\n  const date = lastData.Date.slice(0, 10);\r\n  const maxPeriodDays = countryData.length;\r\n  const active = lastData.Active;\r\n  const confirmed = lastData.Confirmed;\r\n  const deaths = lastData.Deaths;\r\n\r\n  const setStandardPeriod = (period) => {\r\n    setPeriod(period);\r\n    setShowStatistics(true);\r\n  };\r\n  return (\r\n    <div className='covid__countryInfo'>\r\n      <Card\r\n        name={name}\r\n        date={date}\r\n        maxPeriod={maxPeriodDays}\r\n        active={active}\r\n        confirmed={confirmed}\r\n        deaths={deaths}\r\n      />\r\n      <a href='#statisticsInfo'>\r\n        <Button\r\n          callback={() => setStandardPeriod(DAY)}\r\n          label={\"For last day\"}\r\n        />\r\n        <Button\r\n          callback={() => setStandardPeriod(WEEK)}\r\n          label={\"For last week\"}\r\n        />\r\n        <Button\r\n          callback={() => setStandardPeriod(MONTH)}\r\n          label={\"For last month\"}\r\n        />\r\n      </a>\r\n      <a href='#inputMenu'>\r\n        <Button\r\n          callback={() => setShowInputMenu(true)}\r\n          label={\"Input your period\"}\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n","import { Card } from \"../UI\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst Statistics = ({\r\n  period,\r\n  countryData,\r\n  setShowStatistics,\r\n}) => {\r\n  const { start_period, end_period } = period;\r\n\r\n  if (!countryData.length) {\r\n    return null;\r\n  }\r\n  const calculate = (keyWord) => {\r\n    return Math.abs(\r\n      countryData[countryData.length - start_period - 1][\r\n        keyWord\r\n      ] -\r\n        countryData[countryData.length - end_period - 1][\r\n          keyWord\r\n        ]\r\n    );\r\n  };\r\n\r\n  const name = countryData[0].Country;\r\n  const periodDays = Math.abs(start_period - end_period);\r\n  const active = calculate(\"Active\");\r\n  const confirmed = calculate(\"Confirmed\");\r\n  const deaths = calculate(\"Deaths\");\r\n\r\n  return (\r\n    <div\r\n      className='covid__statisticsInfo'\r\n      id='statisticsInfo'\r\n    >\r\n      <Card\r\n        name={name}\r\n        period={periodDays}\r\n        active={active}\r\n        confirmed={confirmed}\r\n        deaths={deaths}\r\n      />\r\n      <Button\r\n        callback={() => setShowStatistics(false)}\r\n        label={\"Hidden Statistics\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Error, Input } from \"../UI\";\r\nimport handleDate from \"../../utils/handleDate\";\r\nimport { INIT_RESULTS } from \"../../utils/constants\";\r\n\r\nconst InputMenu = ({\r\n  maxPeriod,\r\n  setPeriod,\r\n  setShowInputMenu,\r\n  setShowStatistics,\r\n}) => {\r\n  const [results, setResults] = useState(INIT_RESULTS);\r\n  console.log(\"results\", results);\r\n\r\n  const memoCallback = useCallback(\r\n    (inputVal, label) => {\r\n      setResults((prev) => {\r\n        return {\r\n          ...prev,\r\n          ...handleDate(inputVal, label, maxPeriod),\r\n        };\r\n      });\r\n    },\r\n    [maxPeriod, setResults]\r\n  );\r\n  useEffect(() => {\r\n    if (results.period_start && results.period_end) {\r\n      setPeriod({\r\n        start_period: results.period_start,\r\n        end_period: results.period_end,\r\n      });\r\n      setShowStatistics(true);\r\n    } else {\r\n      setShowStatistics(false);\r\n    }\r\n  }, [\r\n    results.period_start,\r\n    results.period_end,\r\n    setPeriod,\r\n    setShowStatistics,\r\n  ]);\r\n\r\n  return (\r\n    <div className='covid__inputMenu' id='inputMenu'>\r\n      <h4>\r\n        Period must be limited no more {maxPeriod} days ago\r\n        to last statistics day.\r\n      </h4>\r\n      <label name='start_period'>Enter periods start</label>\r\n      <Input label={\"start\"} memoCallback={memoCallback} />\r\n\r\n      <label name='end_period'>Enter periods end</label>\r\n      <Input label={\"end\"} memoCallback={memoCallback} />\r\n      <Button\r\n        label={\"Hidden input menu\"}\r\n        callback={() => setShowInputMenu(false)}\r\n      />\r\n      {!!results.warning_start ? (\r\n        <Error label={results.warning_start} />\r\n      ) : null}\r\n      {!!results.warning_end ? (\r\n        <Error label={results.warning_end} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default InputMenu;\r\n","export default function handleDate(\r\n  inpVal,\r\n  label,\r\n  maxPeriod\r\n) {\r\n  const results = {};\r\n  //count days\r\n  const today = new Date(); //ms\r\n  const days = new Date(inpVal); //choose date ms\r\n  const resDays = Math.ceil((today - days) / 86400000);\r\n\r\n  //write results if error ...\r\n  if (resDays < 1 || resDays > maxPeriod) {\r\n    results[\"warning_\" + label] = `Wrong period ${label}.`;\r\n    results[\"period_\" + label] = 0;\r\n  } else {\r\n    results[\"warning_\" + label] = \"\";\r\n    results[\"period_\" + label] = resDays;\r\n  }\r\n  return results;\r\n}\r\n","import { useState } from \"react\";\r\nimport { Back } from \"../../../ui\";\r\nimport CountriesList from \"./CountriesList/CountriesList\";\r\nimport CountryInfo from \"./CountryInfo/CountryInfo\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport InputMenu from \"./InputMenu/InputMenu\";\r\nimport { INIT_PERIOD } from \"../utils/constants\";\r\n\r\nimport \"./Covid.scss\";\r\n\r\nconst Covid = () => {\r\n  const [country, setCountry] = useState(\"\");\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [period, setPeriod] = useState(INIT_PERIOD);\r\n  console.log(\"period\", period);\r\n\r\n  const [showInputMenu, setShowInputMenu] = useState(false);\r\n  const [showStatistics, setShowStatistics] =\r\n    useState(false);\r\n\r\n  return (\r\n    <div className='covid'>\r\n      <Back />\r\n      <main className='covid'>\r\n        <CountriesList setCountry={setCountry} />\r\n        <div className='covid__wrapBlocks'>\r\n          {showInputMenu && (\r\n            <InputMenu\r\n              maxPeriod={countryData.length}\r\n              setPeriod={setPeriod}\r\n              setShowInputMenu={setShowInputMenu}\r\n              setShowStatistics={setShowStatistics}\r\n            />\r\n          )}\r\n          {!!country.length && (\r\n            <CountryInfo\r\n              country={country}\r\n              countryData={countryData}\r\n              setCountryData={setCountryData}\r\n              setPeriod={setPeriod}\r\n              setShowInputMenu={setShowInputMenu}\r\n              setShowStatistics={setShowStatistics}\r\n            />\r\n          )}\r\n          {showStatistics && (\r\n            <Statistics\r\n              period={period}\r\n              countryData={countryData}\r\n              setShowStatistics={setShowStatistics}\r\n            />\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","import { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport const Back = () => {\r\n  return (\r\n    <Link to='/portfolio'>\r\n      <Button\r\n        variant={\"secondary\"}\r\n        style={{\r\n          boxShadow: \"10px 10px 10px rgb(100, 100, 100)\",\r\n        }}\r\n      >\r\n        Back\r\n      </Button>\r\n    </Link>\r\n  );\r\n};\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["INIT_PERIOD","start_period","end_period","DAY","WEEK","MONTH","INIT_RESULTS","warning_start","warning_end","period_start","period_end","getFetch","url","Error","fetch","response","ok","status","json","result","children","handleOnChange","name","id","autoFocus","defaultValue","onChange","e","target","value","disabled","hidden","data","setCountry","map","item","index","country","Country","length","slice","Slug","callback","label","className","onClick","date","maxPeriod","period","active","confirmed","deaths","memoCallback","useState","val","setVal","console","log","useEffect","type","currentTarget","style","width","marginTop","role","items","setItems","fetchData","countries","form","countryData","setCountryData","setPeriod","setShowInputMenu","setShowStatistics","loading","setLoading","request","lastData","Date","maxPeriodDays","Active","Confirmed","Deaths","setStandardPeriod","href","calculate","keyWord","Math","abs","periodDays","results","setResults","useCallback","inputVal","prev","inpVal","today","days","resDays","ceil","handleDate","showInputMenu","showStatistics","Back","to","Button","variant","boxShadow","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}